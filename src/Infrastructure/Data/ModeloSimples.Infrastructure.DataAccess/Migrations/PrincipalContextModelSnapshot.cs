// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModeloSimples.Infrastructure.DataAccess;

#nullable disable

namespace ModeloSimples.Infrastructure.DataAccess.Migrations
{
    [DbContext(typeof(PrincipalContext))]
    partial class PrincipalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ModeloSimples.Domain.Aggregates.Pessoa", b =>
                {
                    b.Property<Guid>("PessoaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PessoaId");

                    b.ToTable("Pessoa");
                });

            modelBuilder.Entity("ModeloSimples.Domain.Entities.PessoaFisica", b =>
                {
                    b.Property<Guid>("PessoaFisicaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeSocial")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PessoaFisicaId");

                    b.ToTable("PessoaFisica");
                });

            modelBuilder.Entity("ModeloSimples.Domain.Entities.PessoaJuridica", b =>
                {
                    b.Property<Guid>("PessoaJuridicaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNAE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PessoaJuridicaId");

                    b.ToTable("PessoaJuridica");
                });

            modelBuilder.Entity("ModeloSimples.Domain.Aggregates.Pessoa", b =>
                {
                    b.OwnsOne("ModeloSimples.Domain.ValueObjects.Auditoria", "Controle", b1 =>
                        {
                            b1.Property<Guid>("PessoaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2")
                                .HasColumnName("Criado");

                            b1.Property<bool>("IsBlocked")
                                .HasColumnType("bit")
                                .HasColumnName("Bloquado");

                            b1.Property<bool>("IsRemoved")
                                .HasColumnType("bit")
                                .HasColumnName("Removido");

                            b1.Property<DateTime?>("Modified")
                                .HasColumnType("datetime2")
                                .HasColumnName("Modificado");

                            b1.HasKey("PessoaId");

                            b1.ToTable("Pessoa");

                            b1.WithOwner()
                                .HasForeignKey("PessoaId");
                        });

                    b.OwnsOne("ModeloSimples.Domain.ValueObjects.Versionamento", "Versao", b1 =>
                        {
                            b1.Property<Guid>("PessoaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Dados")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Versao");

                            b1.HasKey("PessoaId");

                            b1.ToTable("Pessoa");

                            b1.WithOwner()
                                .HasForeignKey("PessoaId");
                        });

                    b.Navigation("Controle")
                        .IsRequired();

                    b.Navigation("Versao")
                        .IsRequired();
                });

            modelBuilder.Entity("ModeloSimples.Domain.Entities.PessoaFisica", b =>
                {
                    b.HasOne("ModeloSimples.Domain.Aggregates.Pessoa", null)
                        .WithOne("PessoaFisica")
                        .HasForeignKey("ModeloSimples.Domain.Entities.PessoaFisica", "PessoaFisicaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModeloSimples.Domain.Entities.PessoaJuridica", b =>
                {
                    b.HasOne("ModeloSimples.Domain.Aggregates.Pessoa", null)
                        .WithOne("PessoaJuridica")
                        .HasForeignKey("ModeloSimples.Domain.Entities.PessoaJuridica", "PessoaJuridicaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModeloSimples.Domain.Aggregates.Pessoa", b =>
                {
                    b.Navigation("PessoaFisica");

                    b.Navigation("PessoaJuridica");
                });
#pragma warning restore 612, 618
        }
    }
}
